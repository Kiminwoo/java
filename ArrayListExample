# java
package Practice;
import java.util.ArrayList; 
// ArrayList또한 선언해 주어야 합니다.
import java.util.Collections; 
// collections를 사용해 주기 위해서는 import를 해주어야 합니다.
public class ArrayListExample {
	public static void main(String[] args) {
		
		ArrayList list1 = new ArrayList(10); 
//ArrayList로 된 list1를 선언해 줍니다 . 크기는 10이구여.
		list1.add(new Integer(5));           
// list1에는 내부적으로 배열이 존재하므로 순서대로 5.4.2.0...들어갑니다.﻿﻿﻿﻿
		list1.add(new Integer(4));
		list1.add(new Integer(2));
		list1.add(new Integer(0));
		list1.add(new Integer(1));
		list1.add(new Integer(3));
		
		ArrayList list2 = new ArrayList(list1.subList(1, 4)); 
// list2는 list1의 1번째 방부터 3번째 방까지의 주소값들이 존재합니다.
		System.out.println("List1 : "+list1+ "List2 : "+ list2); 
		
		Collections.sort(list1); 
// Colletions 클래스내에 존재하는 sort메서드는 정렬을 해주는 기능을 하죠.
		Collections.sort(list2);
		
		System.out.println("List1 : "+list1+ "List2 : "+ list2);
		
		System.out.println("list1.containsAll(list2) : " + list1.containsAll(list2)); 
// list1은 list2의 값들을 모두 포함하냐는 뜻인데 . 결과값은 true or false가 반환됩니다.
	
		list2.add("B");
		list2.add("C");
		list2.add(3,"A"); // list2에 3번째 방에 A를 넣겠다 의미이죠.
		
		System.out.println("List1 : "+list1+ "List2 : "+ list2);
		
		list2.set(3, "AA");
		
		System.out.println("list1.retainAll(list2) : " + list1.retainAll(list2)); 
// retainAll의 의미는  list1에서 list2에서 겹치는 부분을 제외하고 다 삭제하겠다 의미입니다.
		
	}
}
결과값 
List1 : [5, 4, 2, 0, 1, 3]List2 : [4, 2, 0]
List1 : [0, 1, 2, 3, 4, 5]List2 : [0, 2, 4]
list1.containsAll(list2) : true
List1 : [0, 1, 2, 3, 4, 5]List2 : [0, 2, 4, A, B, C]
list1.retainAll(list2) : true
